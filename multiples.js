
/*If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.*/

var sum = 0;
for (i = 0; i <1000; ++i){
    if (i%3 == 0 || i%5 == 0) {
        sum += i;
    }
}
console.log("Multiples of 3/5 Sum=" + sum);

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

var fib = []; //Initialize array!
var next = 0;

fib[0] = 0;
fib[1] = 1;
sum = 0;
for(i=2; next<=4000000; i++)
{
    next = fib[0] + fib[1];
    if (next%2==0) {
        sum += next;
    }
    fib[0] = fib[1];
    fib[1] = next;
}
console.log("Fibonacci less than 4 mill Sum=" + sum);


/*The prime factors of 13195 are 5, 7, 13 and 29.

 What is the largest prime factor of the number 600851475143 ?

var biggestPrimeFactor = NaN;

for (i = 2; i < 600851475143 ; ++i) {
    if(isPrime(i))
}



function isPrime(num) {
    if(num==2 || num==3) {
        return true;
    }
    if(num%2==0) {
        return false;
    }
    var sqrt = Number(Math.sqrt(num));
    for (i=3; i <= sqrt; ++i) {
        if(num%i==0) {
            return false;
        }
    }
    return true;
}*/